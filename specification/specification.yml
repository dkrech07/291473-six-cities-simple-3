openapi: 3.1.0
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: users
    description: Действия с пользователем.
  - name: offers
    description: Действия с предложениями.
  - name: comments
    description: Действия с комментариями.

paths:
  # ---------------------- USERS PATHS ----------------------

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

  # ---------------------- OFFERS PATHS ----------------------

  # /users/register:
  # post:
  #   tags:
  #     - users
  #   summary: Регистрация пользователя
  #   description: Регистрирует нового пользователя.

  #   requestBody:
  #     description: Информация для создания нового пользователя.
  #     content:
  #       application/json:
  #         schema:
  #           $ref: "#/components/schemas/createUser"
  #     required: true

  #   responses:
  #     "201":
  #       description: Пользователь зарегистрирован. Объект пользователя.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/user"

  #     "409":
  #       description: Пользователь с таким email уже существует.

  /offers/create:
    post:
      tags:
        - offers
      summary: Создание предложения
      description: Создает новое предложение.

      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOffer"
        required: true

      responses:
        "201":
          description: Предложение создано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offer"

  /offers/{OfferId}/edit:
    post:
      tags:
        - offers
      summary: Редактирование предложения
      description: Редактирует предложение.

      requestBody:
        description: Информация по редактируемому предложению.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/editOffer"
        required: true

      responses:
        "201":
          description: Предложение было отредактировано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offer"
        "409":
          description: Предложение попытался отредактировать пользователь, не создавший данное предложение.

  /offers/{OfferId}/delete:
    post:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаляет предложение.

      requestBody:
        description: Информация по удаляемому предложению.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteOffer"
        required: true

      responses:
        "201":
          description: Предложение было удалено. Объект удаленного предложения.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offer"
        "409":
          description: Предложение попытался удалить пользователь, не создавший данное предложение.

components:
  # ---------------------- USERS COMPONENTS----------------------

  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        type:
          type: string
          example: Regular

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        email:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        type:
          type: string
          example: Regular

  # ---------------------- OFFERS COMPONENTS----------------------
